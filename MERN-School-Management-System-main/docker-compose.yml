version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: edutrack_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: edutrack_school
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - edutrack_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for session storage and caching (optional)
  redis:
    image: redis:7.2-alpine
    container_name: edutrack_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass redispassword
    volumes:
      - redis_data:/data
    networks:
      - edutrack_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: edutrack_backend
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/edutrack_school?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-development-only
      JWT_REFRESH_SECRET: your-refresh-secret-development-only
      CLIENT_URL: http://localhost:3000
      REDIS_URL: redis://:redispassword@redis:6379
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - edutrack_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: edutrack_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5001/api
      REACT_APP_SOCKET_URL: http://localhost:5001
      CHOKIDAR_USEPOLLING: true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - edutrack_network
    stdin_open: true
    tty: true

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  edutrack_network:
    driver: bridge